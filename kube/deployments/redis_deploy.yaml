---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amz-selenium-web-redis
  labels:
    app: amz-selenium-web
    component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amz-selenium-web
      component: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: amz-selenium-web
        component: redis
    spec:
      restartPolicy: Always
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: amz-selenium-web-redis
      containers:
        - name: redis
          image: redis:4.0.10
          ports:
            - containerPort: 6379
          livenessProbe:
            tcpSocket:
              port: 6379
          readinessProbe:
            tcpSocket:
              port: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          command:
            - redis-server
            - --appendonly
            - "yes"
            - --requirepass
            - $(REDIS_PASSWORD)
          envFrom:
            - secretRef:
                name: amz-selenium-web-rails-env
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - amz-selenium-web
              - key: component
                operator: In
                values:
                - redis
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - amz-selenium-web
              - key: component
                operator: In
                values:
                - mysql
            topologyKey: "kubernetes.io/hostname"
